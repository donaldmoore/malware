// JavaScript Document/* PUI LightBox */					var GenCardLightBox = {					 opened : null,					 show : function(id, evt){					  this.close(evt);					  					  this.opened = new PAYPAL.util.Lightbox(id);					  this.opened.show(); 					 },					 close : function(evt){					  evt = evt || window.event;					  YAHOO.util.Event.preventDefault(evt);					  					  if(this.opened){					   this.opened.close();					  }					  this.opened = null					 }					} 										function Lightbox(){					var genCardCheck = document.getElementById("genCard");					if (genCardCheck != null){						GenCardLightBox.show("genCard", this);					 }}					 					YAHOO.util.Event.addListener(window, "load", Lightbox);									function NonJsTextMessage() {					document.getElementById("ReplicaOverview").style.display="none";					}																PAYPAL.namespace("RecentActivity.replicaMsg");												/**						* Show or hide the replica message above the recent activity table.						* The show/hide state will be saved in a cookie for 1 year.						*/						PAYPAL.RecentActivity.replicaMsg = {														showLink : null,							closeBtn : null,														cookieName : "hideReplicaActivityMsg",														/**							* Initialize the message.  							* Either show or hide it based on the "hideReplicaActivityMsg" cookie.							*/							init : function(){																// If the message is not present, stop here								if(document.getElementById("activityReplicaMsg") == null){									return;								}																// Get show link and close button								this.showLink = document.getElementById("showActivityReplicaMsg");								this.showLink = this.showLink.getElementsByTagName("a");								if(this.showLink.length > 0){									this.showLink = this.showLink[0];								}																this.closeBtn = YAHOO.util.Dom.getElementsByClassName("close", "div", "activityReplicaMsg");								if(this.closeBtn.length > 0){									this.closeBtn = this.closeBtn[0];									this.closeBtn.style.display = "block";								}																// Add event handlers								YAHOO.util.Event.addListener(this.showLink, "click", this.show, this, true);								YAHOO.util.Event.addListener(this.closeBtn, "click", this.close, this, true);																								// Get closed state from cookie								var closed = ( null != document.cookie.match(new RegExp("(^|;)\\s*"+ this.cookieName +"=true(;|$)")) );								if(closed){									this.close(false);								}								else{									this.show(false);								}							},														/**							* Close the message area and set the 'hideReplicaActivityMsg' cookie to true.							* @param {Event} evt The browser event, or FALSE							*/							close : function(evt){								if(evt !== false){									YAHOO.util.Event.preventDefault(evt);								}																								this.setCookie(true);																// Show link & hide message								YAHOO.util.Dom.removeClass("showActivityReplicaMsg", "accessAid");								YAHOO.util.Dom.addClass("activityReplicaMsg", "accessAid");							},														/**							* Show the message area and set the 'hideReplicaActivityMsg' cookie to false.							* @param {Event} evt The browser event, or FALSE							*/							show : function(evt){								if(evt !== false){									YAHOO.util.Event.preventDefault(evt);								}																// Hide link & show message								YAHOO.util.Dom.removeClass("activityReplicaMsg", "accessAid");								YAHOO.util.Dom.addClass("showActivityReplicaMsg", "accessAid");																this.setCookie(false);							},														/**							* Set the 'hideReplicaActivityMsg' cookie.							* @param {boolean} value The cookie value to set.							*/							setCookie : function(value){								var expire = new Date();								expire.setYear(expire.getFullYear() + 1);								document.cookie = this.cookieName +"="+ value +";expires="+ expire.toGMTString();							}						}						YAHOO.util.Event.onAvailable("activityReplicaMsg", PAYPAL.RecentActivity.replicaMsg.init, PAYPAL.RecentActivity.replicaMsg, true);